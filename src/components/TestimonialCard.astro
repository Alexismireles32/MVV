---
const { name, location, timeUsing, testimonial, rating = 5, imageSrc } = Astro.props;
---

<div class="bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow">
  <div class="flex items-center gap-4 mb-4">
    {imageSrc ? (
      <img 
        src={imageSrc || "/placeholder.svg"}
        alt={name}
        width="60"
        height="60"
        class="w-15 h-15 rounded-full object-cover"
        loading="lazy"
        decoding="async"
      />
    ) : (
      <div class="w-15 h-15 rounded-full bg-primary text-white flex items-center justify-center text-xl font-bold">
        {name.charAt(0)}
      </div>
    )}
    <div>
      <h3 class="font-bold text-gray-900">{name}</h3>
      {location && <p class="text-sm text-gray-600">{location}</p>}
      <p class="text-sm text-gray-500">{timeUsing}</p>
    </div>
  </div>
  
  <div class="flex gap-1 mb-3" aria-label={`CalificaciÃ³n: ${rating} de 5 estrellas`}>
    {Array.from({ length: 5 }).map((_, i) => (
      <svg 
        class={`w-5 h-5 ${i < rating ? 'text-yellow-400' : 'text-gray-300'}`}
        fill="currentColor" 
        viewBox="0 0 20 20"
      >
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
      </svg>
    ))}
  </div>
  
  <p class="text-gray-700 leading-relaxed italic">"{testimonial}"</p>
</div>
